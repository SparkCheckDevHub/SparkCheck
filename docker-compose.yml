services:
  app:
    build:
      context: ./app
    container_name: sparkcheck-app
    ports:
      - "5980:80"
    depends_on:
      - db
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ConnectionStrings__DefaultConnection: "Server=db,1433;Database=dbSparkCheck;User Id=sa;Password=${SA_PASSWORD};TrustServerCertificate=True;"
    networks:
      - sparkcheck-network
    restart: unless-stopped

  db:
    build:
      context: ./db
      dockerfile: Dockerfile
    container_name: sparkcheck-db
    ports:
      - "127.0.0.1:1433:1433"
    environment:
      SA_PASSWORD: "${SA_PASSWORD}"
      ACCEPT_EULA: "Y"
    volumes:
      - mssql-data:/var/opt/mssql
    networks:
      - sparkcheck-network
    restart: unless-stopped
    entrypoint: ["/bin/bash", "/usr/src/app/init.sh"]

  matcher:
    build:
      context: ./matcher
    container_name: sparkcheck-matcher
    command: uvicorn main:app --host 0.0.0.0 --port 9988
    ports:
      - "9988:9988"
    networks:
      - sparkcheck-network
    restart: unless-stopped
    depends_on:
      - db
    environment:
      SC_MATCHER_CONN: "mssql+pyodbc://sa:${SA_PASSWORD}@db:1433/dbSparkCheck?driver=ODBC+Driver+18+for+SQL+Server&TrustServerCertificate=yes"
volumes:
  mssql-data:

networks:
  sparkcheck-network: