@page "/phoneauth"
@layout MainLayout
@inject NavigationManager Navigation
@inject UserService UserService
@using SparkCheck.Services
@using SparkCheck.Models

<MudPaper Style="min-height: 100vh; padding: 1rem; display: flex; flex-direction: column; justify-content: center;">
    <EditForm Model="_authModel" OnValidSubmit="HandleVerify">
        <DataAnnotationsValidator />

        <MudStack AlignItems="AlignItems.Center" Spacing="1" Class="mb-4">
            <MudText Typo="Typo.h5">Enter Verification Code</MudText>

            @if (!string.IsNullOrWhiteSpace(ErrorMessage)) {
                <MudAlert Severity="Severity.Error" Variant="Variant.Filled" Dense="true">
                    @ErrorMessage
                </MudAlert>
            }
        </MudStack>

        <MudTextField Label="Verification Code"
                      @bind-Value="_authModel.VerificationCode"
                      MaxLength="6"
                      Required="true"
                      Class="mb-2" />

        <MudGrid Class="mt-4">
            <MudItem xs="6">
                <MudButton Variant="Variant.Filled"
                           StartIcon="@Icons.Material.Filled.ArrowBack"
                           FullWidth="true"
                           OnClick="Cancel">
                    Cancel
                </MudButton>
            </MudItem>
            <MudItem xs="6">
                <MudButton Variant="Variant.Filled"
                           EndIcon="@Icons.Material.Filled.Check"
                           ButtonType="ButtonType.Submit"
                           FullWidth="true">
                    Verify
                </MudButton>
            </MudItem>
        </MudGrid>
    </EditForm>
</MudPaper>

@code {
    private AuthModel _authModel = new();
    private string? ErrorMessage;

    private async Task HandleVerify() {
        ErrorMessage = null;

        // Retrieve the phone number stored in UserService
        var phone = UserService.GetPhoneNumber(); // Ensure you have set the phone number in UserService during login

        // Call the service method, which will handle verification
        var result = await UserService.VerifyPhoneAsync(phone, _authModel.VerificationCode);

        if (result.Success) {
            var userId = result.Result;  // Assuming the result contains the user ID
            await UserService.UpdateUserStatusAsync(userId, true);
            Navigation.NavigateTo("/dashboard");
        }
        else {
            ErrorMessage = result.ErrorMessage ?? "Invalid verification code. Please try again.";
        }
    }

    private void Cancel() => Navigation.NavigateTo("/phonelogin");
}
