@page "/logoutconfirmation"
@layout MainLayout
@inject NavigationManager Navigation
@inject UserSessionService UserSession
@inject UserService UserService

<!-- MOBILE VIEW (XS, SM) -->
<MudHidden Breakpoint="Breakpoint.MdAndUp">
    <MudStack Spacing="8" AlignItems="AlignItems.Center" Style="width: 100%">
        <img src="images/logo.png"
             alt="SparkCheck logo"
             style="width: 100%;" />

        <MudText Typo="Typo.body1" Align="Align.Center" Class="spark-text">
            You've been logged out, @UserSession.strUsername.
        </MudText>

        <MudText Typo="Typo.caption" Align="Align.Center" Class="spark-text">
            Redirecting in @_secondsLeft seconds...
        </MudText>

        <MudText Typo="Typo.caption" Align="Align.Center" Class="spark-text">
            © 2025 SparkCheck | Cortanix™
        </MudText>
    </MudStack>
</MudHidden>

<!-- DESKTOP/TABLET VIEW (MD and up) -->
<MudHidden Breakpoint="Breakpoint.SmAndDown">
    <MudContainer MaxWidth="MaxWidth.Medium">
        <MudStack Spacing="8" AlignItems="AlignItems.Center">
            <img src="images/logo.png" alt="SparkCheck logo" style="width: 70%;" />

            <MudText Typo="Typo.h6" Align="Align.Center" Class="spark-text">
                SparkCheck is optimized for mobile devices.
            </MudText>

            <MudText Typo="Typo.body1" Align="Align.Center" Class="spark-text">
                For the best experience, please open SparkCheck on your phone and
                save it to your home screen.
            </MudText>

            <MudText Typo="Typo.subtitle2" Align="Align.Center" Class="spark-text">
                © 2025 SparkCheck | Cortanix™
            </MudText>
        </MudStack>
    </MudContainer>
</MudHidden>

@code {
    private int _secondsLeft = 3;
    private System.Timers.Timer? _timer;

    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine("[LOGOUT CONFIRMATION] User logging out...");

        if (UserSession.intUserID is not null && !string.IsNullOrWhiteSpace(UserSession.strPhone))
        {
            await UserService.UpdateUserStatusAsync(UserSession.intUserID.Value, false);
            Console.WriteLine("[LOGOUT CONFIRMATION] User marked offline.");
        }

        UserSession.Clear();

        // Start countdown timer
        _timer = new System.Timers.Timer(1000);
        _timer.Elapsed += async (_, _) =>
        {
            _secondsLeft--;
            if (_secondsLeft <= 0)
            {
                _timer.Dispose();
                await InvokeAsync(() => Navigation.NavigateTo("/"));
            }
            await InvokeAsync(StateHasChanged);
        };
        _timer.Start();
    }

    public void Dispose()
    {
        _timer?.Dispose();
    }
}

