@page "/dashboard"
@layout MainLayout
@inject NavigationManager Navigation
@inject UserSessionService UserSession
@inject UserService UserService
@using SparkCheck.Models


<!-- MOBILE VIEW (XS, SM) -->
<MudHidden Breakpoint="Breakpoint.MdAndUp">
	<MudStack Spacing="6" AlignItems="AlignItems.Center" Style="width: 100%">

		<img src="images/logo.png"
			 alt="SparkCheck logo"
			 style="width: 100%;" />

		<MudText Typo="Typo.h5" Align="Align.Center" Class="spark-text">
			Welcome, @UserSession.strUsername!
		</MudText>

		<MudPaper Class="p-4" Style="width: 100%; max-width: 320px;">
			<MudList T="object" Dense="true">

				<MudListItem T="object" OnClick="@(() => NavigateTo("/profile"))">
					<div class="list-item-content">
						@if (UserProgress.blnProfileComplete)
						{
							<MudIcon Icon="@Icons.Material.Filled.CheckCircle" Color="Color.Success" Class="me-2" />
							<span>Your profile’s looking sharp.</span>
						}
						else
						{
							<MudIcon Icon="@Icons.Material.Filled.Person" Class="me-2" />
							<span>A great match needs a great profile.</span>
						}
					</div>
				</MudListItem>

				<MudListItem T="object" OnClick="@(() => NavigateTo("/interests"))">
					<div class="list-item-content">
						@if (UserProgress.blnPreferencesComplete)
						{
							<MudIcon Icon="@Icons.Material.Filled.CheckCircle" Color="Color.Success" Class="me-2" />
							<span>Your vibe is locked in.</span>
						}
						else
						{
							<MudIcon Icon="@Icons.Material.Filled.Tune" Class="me-2" />
							<span>Dial in your vibe for a solid match.</span>
						}
					</div>
				</MudListItem>

				<MudListItem T="object" Disabled="@(IsOnboardingIncomplete)" OnClick="@(() => NavigateTo("/matchqueue"))">
					<div class="list-item-content">
						<MudIcon Icon="@Icons.Material.Filled.Favorite" Class="me-2" />
						@if (IsOnboardingIncomplete)
						{
							<span>Finish setup to join the match queue.</span>
						}
						else
						{
							<span>Locked in and ready to match.</span>
						}
					</div>
				</MudListItem>
			</MudList>
		</MudPaper>

		<MudText Typo="Typo.subtitle2" Align="Align.Center" Class="spark-text">
			© 2025 SparkCheck | Cortanix™
		</MudText>

	</MudStack>
</MudHidden>

<!-- DESKTOP/TABLET VIEW (MD and up) -->
<MudHidden Breakpoint="Breakpoint.SmAndDown">
	<MudContainer MaxWidth="MaxWidth.Medium">
		<MudStack Spacing="8" AlignItems="AlignItems.Center">
			<img src="images/logo.png"
				 alt="SparkCheck logo"
				 style="width: 70%;" />

			<MudText Typo="Typo.h6" Align="Align.Center" Class="spark-text">
				SparkCheck is optimized for mobile devices.
			</MudText>

			<MudText Typo="Typo.body1" Align="Align.Center" Class="spark-text">
				For the best experience, please open SparkCheck on your phone and
				save it to your home screen.
			</MudText>

			<MudText Typo="Typo.subtitle2" Align="Align.Center" Class="spark-text">
				© 2025 SparkCheck | Cortanix™
			</MudText>

		</MudStack>
	</MudContainer>
</MudHidden>

@code {
	
	private OnboardingProgressDto UserProgress = new();

	private void NavigateTo(string url) => Navigation.NavigateTo(url);

	protected override async Task OnInitializedAsync() {

		Console.WriteLine("==== Debug User Session Information. ====");
		Console.WriteLine($"UserID: {UserSession.intUserID}");
		Console.WriteLine($"Username: {UserSession.strUsername}");
		Console.WriteLine($"First Name: {UserSession.strFirstName}");
		Console.WriteLine($"Last Name: {UserSession.strLastName}");
		Console.WriteLine($"Phone: {UserSession.strPhone}");
		Console.WriteLine($"DOB: {UserSession.dtmDateOfBirth}");
		Console.WriteLine($"GenderID: {UserSession.intGenderID}");
		Console.WriteLine($"ZipCodeID: {UserSession.intZipCodeID}");
		Console.WriteLine($"IsAuthenticated: {UserSession.blnIsAuthenticated}");
		Console.WriteLine($"IsActive: {UserSession.blnIsActive}");
		Console.WriteLine($"IsOnline: {UserSession.blnIsOnline}");
		Console.WriteLine($"InQueue: {UserSession.blnInQueue}");
		Console.WriteLine($"QueuedDate: {UserSession.dtmQueuedDate}");
		Console.WriteLine("==================================================");
		// ... [you can keep or trim the rest of the debug logs]

		if (UserSession.intUserID == null) {
			Console.WriteLine("[DASHBOARD] No user ID found.");
			return;
		}

		var progress = await UserService.GetUserOnboardingProgressAsync(UserSession.intUserID.Value);

		UserProgress = new OnboardingProgressDto {
			blnProfileComplete = progress.blnProfileComplete,
			blnPreferencesComplete = progress.blnPreferencesComplete
		};

		Console.WriteLine($"[DASHBOARD] ProfileComplete: {UserProgress.blnProfileComplete}, PreferencesComplete: {UserProgress.blnPreferencesComplete}");
	}


	private bool IsOnboardingIncomplete =>
	!UserProgress.blnProfileComplete || !UserProgress.blnPreferencesComplete;

}
