@page "/matchqueue"
@layout MainLayout
@inherits SparkCheck.Shared.SecureBasePage

<MudContainer MaxWidth="MaxWidth.False" Class="d-flex flex-column min-vh-100 justify-center align-center px-4">
    <MudText Typo="Typo.h5" Class="mb-4 text-center">
        Find a match now
    </MudText>
    
    <MudText Typo="Typo.subtitle1" Class="mb-4 text-center">
        @($"There are currently {onlineUserCount} users online")
    </MudText>

    <MudStack Spacing="2" Class="w-full">
        <MudButton Variant="Variant.Filled" FullWidth="true" Disabled="@( isQueueing )" OnClick="@(() => @StartMatching())">
            Start Matching...
        </MudButton>

        <MudButton Variant="Variant.Filled" FullWidth="true" Disabled="@( !isQueueing )" OnClick="@(() => @StopMatching())">
            Stop
        </MudButton>
    </MudStack>

    <MudSpacer />
    <BottomNavBar />
</MudContainer>

@inject UserService UserService
@code{
    private int onlineUserCount;
    private bool isQueueing = false;

    protected override async Task OnInitializedAsync()
    {
        onlineUserCount = await UserService.GetOnlineUserCountAsync();
    }

    private void StartMatching()
    {
        isQueueing = true;
        // Logic to start matching goes 
        StateHasChanged();
    }

    private void StopMatching()
    {
        isQueueing = false;
        // Logic to stop matching goes here
        StateHasChanged();
    }
}